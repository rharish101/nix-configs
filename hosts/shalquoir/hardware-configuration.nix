# SPDX-FileCopyrightText: 2025 Harish Rajagopal <harish.rajagopals@gmail.com>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ lib, modulesPath, ... }:
{
  imports = [ (modulesPath + "/profiles/qemu-guest.nix") ];

  boot.initrd.availableKernelModules = [
    "ahci"
    "xhci_pci"
    "virtio_pci"
    "virtio_scsi"
    "sd_mod"
    "sr_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "none";
    fsType = "tmpfs";
    options = [
      "defaults"
      "size=2g"
      "mode=755"
    ];
  };

  fileSystems."/persist" = {
    device = "/dev/disk/by-uuid/6197e8a9-c64a-4a49-8eea-2a9fc00c7243";
    fsType = "btrfs";
    options = [
      "subvol=@persist"
      "noatime"
      "compress-force=zstd:1"
    ];
    neededForBoot = true;
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/6197e8a9-c64a-4a49-8eea-2a9fc00c7243";
    fsType = "btrfs";
    options = [
      "subvol=@nix"
      "noatime"
      "compress-force=zstd:1"
    ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/6197e8a9-c64a-4a49-8eea-2a9fc00c7243";
    fsType = "btrfs";
    options = [
      "subvol=@home"
      "noatime"
      "compress-force=zstd:1"
    ];
  };

  fileSystems."/etc/nixos" = {
    device = "/home/rharish/nix-configs";
    options = [
      "bind"
      "x-gvfs-hide"
    ];
  };

  fileSystems."/swap" = {
    device = "/dev/disk/by-uuid/6197e8a9-c64a-4a49-8eea-2a9fc00c7243";
    fsType = "btrfs";
    options = [
      "subvol=@swap"
      "noatime"
      "compress-force=zstd:1"
    ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/4BFC-F8FB";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = [
    {
      device = "/swap/swapfile";
      size = 4 * 1024;
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;

  # Set the default interface for NAT.
  networking.nat.externalInterface = "enp1s0";

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
